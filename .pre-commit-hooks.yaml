-   id: python-check-blanket-noqa
    name: Check blanket noqa
    description: 'Enforce that `noqa` annotations always occur with specific codes'
    entry: '# noqa(?!: )'
    language: pygrep
    types: [python]
-   id: python-check-mock-methods
    name: check for not-real mock methods
    description: >-
        Prevent common mistakes of `assert mck.not_called()`, `assert mck.called_once_with(...)`
        and `mck.assert_called`.
    language: pygrep
    entry: >
        (?x)(
            assert .*\.(
                not_called|
                called_
            )|
            \.assert_(
                any_call|
                called|
                called_once|
                called_once_with|
                called_with|
                has_calls|
                not_called
            )($|[^(\w])
        )
    types: [python]
-   id: python-no-log-warn
    name: use logger.warning(
    description: 'A quick check for the deprecated `.warn()` method of python loggers'
    entry: '\.warn\('
    language: pygrep
    types: [python]
-   id: python-private-access-enforcement
    name: don't access other classes's private members
    description: 'Allow referencing self._whatever but not something._whatever; disable with `# private`'
    entry: (?<!\Wself)(?<![)])[.]_[^_](?!.*#\s*private)
    language: pygrep
    types: [python]
-   id: python-use-type-annotations
    name: type annotations not comments
    description: 'Enforce that python3.6+ type annotations are used instead of type comments'
    entry: '# type(?!: *ignore *($|#))'
    language: pygrep
    types: [python]
-   id: rst-backticks
    name: rst ``code`` is two backticks
    description: 'Detect common mistake of using single backticks when writing rst'
    entry: ' `[^`]+[^_]`([^_]|$)'
    language: pygrep
    types: [rst]
